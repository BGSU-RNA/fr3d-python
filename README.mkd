# FR3D #

[![Build Status](https://api.travis-ci.org/BGSU-RNA/fr3d-python.png?branch=develop)](https://travis-ci.org/BGSU-RNA/fr3d-python)

# FR3D 
## An implementation of the FR3D program in python. 
1. [Downloading PDBX](#download-and-install-pdbx)
2. [Cloning FR3D-Python](#cloning-fr3d-python)
3. Setup FR3D Python:  
	  i. [Setup FR3D Python in Python 2.7](#to-setup-fr3d-using-python-27)   
	  ii. [Setup FR3D Python in Python 3.x](#to-setup-fr3d-using-python-3x)  
4. [Running FR3D Python](#running-fr3d-python)
5. [Notes](#notes)


## Cloning FR3D Python
FR3D Python can be cloned to your local machine from our [Github](https://github.com/BGSU-RNA/fr3d-python).  Once the repository is cloned to your machine, to navigate to the fr3d-python folder and run ```python setup.py install```. <br>
NOTE: Any time functionality in files such as fr3d/cif/reader.py get edited, you will need to rerun the ```python setup.py install``` command.

## To Set up FR3D using Python 2.7
### Download and Install PDBx
**FR3D-python requires PDBx to be installed**
PDBx can be downloaded and installed from PDB [here](https://mmcif.wwpdb.org/docs/sw-examples/python/html/). Follow instructions to get PDBx installed on your local machine and placed in your python path. This completes the installation process for FR3D using python 2.7. 

## To Set up FR3D using Python 3.x
In order to use FR3D in Python 3, you will need to install the mmcif-pdbx package. 
You can do that by using ``` pip install mmcif-pdbx``` . This package can be found [here](https://pypi.org/project/mmcif-pdbx/).
This will put the pdbx package in your python path. If for some reason your machine expects the iterator loop to deal with bytes, at lines 387 and 397 (in C:\python-path\padbx\reader.py) you can add a line ``` line = line.decode() ``` after the for loop for the file iterator. 

## Running FR3D Python
In order to run FR3D python, navigate to the fr3d folder. 
The program to annotate basepairs is called NA_pairwise_interactions.py.
This can be found in fr3d/classifiers.
To run, navigate to the classifiers folder in your file structure and run ```python NA_pairwise_interactions.py```.
If you would like to specify the Cif file to be read, you can use the -i or --input flags to specify which file in your local path you would like to annotate.
This can be done in the form of ``` python NA_pairwise_interactions.py --input C:\Path\To\Your\File\[filename].cif ``` where [filename] is the name of your cif file (ie. '4V9F'). Additionally, if you don't have the cif file in your localpath, you can run ``` python NA_pairwise_interactions.py --input [filename].cif ``` , and this will download the file for processing and run the program. 

Output can be specified using the -o or --output tags. This can be done in the form of ``` python NA_pairwise_interactions.py --output C:\Where\You\Want|Annotations\Output\ ```. This will write where you wish to output your annotations. 

## Windows users
FR3D Python uses case-sensitive file names because chain identifiers in PDB are case sensitive.
Windows looks like it uses case sensitive filenames, but if you create a file called Data.txt and then save another file in the same place called data.txt, it will overwrite Data.txt and it will be listed as Data.txt because that was there first.
Recent versions of Windows allow for case sensitivity.
For FR3D Python, you need to enable case sensitivity in filenames in the ```units``` folder.
See https://docs.microsoft.com/en-us/windows/wsl/case-sensitivity to read about how to enable case sensitivity for a specific directory.
The key steps seem to be:
	- Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux
	- fsutil.exe file setCaseSensitiveInfo <path to folder> enable
Note that the first step is not actually mentioned in the Microsoft documentation.



## Notes
FR3D Python also requires matplotlib to be installed.

FR3D Python is not yet fully compatible with python 3.10.

Any time functionality in files such as fr3d/cif/reader.py get edited, you will need to rerun the ```python setup.py install``` command.
