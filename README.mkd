# FR3D #

[![Build Status](https://api.travis-ci.org/BGSU-RNA/fr3d-python.png?branch=develop)](https://travis-ci.org/BGSU-RNA/fr3d-python)

# FR3D 
## An implementation of the FR3D program in python. 
1. [Downloading PDBX](#download-and-install-pdbx)
2. [Cloning FR3D-Python](#cloning-fr3d-python)
3. Setup FR3D Python:  
	  i. [Setup FR3D Python in Python 2.7](#to-setup-fr3d-using-python-27)   
	  ii. [Setup FR3D Python in Python 3.x](#to-setup-fr3d-using-python-3x)  
4. [Running FR3D Python](#running-fr3d-python)
5. [Notes](#notes)


## Quick start using Docker

Get started with fr3d-python using containers with [Docker](https://www.docker.com), [Podman](https://podman.io), or [Singularity](https://sylabs.io/guides/latest/user-guide/introduction.html).

1. Get a Docker image

    ```
    docker pull ghcr.io/bgsu-rna/fr3d-python
    ```

    Alternatively, clone the repo and build locally:

    ```
    git clone https://github.com/BGSU-RNA/fr3d-python
    docker build -t fr3d-python .
    ```

2. Annotate RNA 3D structures with basepair interactions

    ```
    docker run -v <path_to_input>:/rna/input -v <path_to_output>:/rna/output fr3d-python python fr3d/classifiers/NA_pairwise_interactions.py -i /rna/input -o /rna/output <pdb_id>
    ```

    where

    - `path_to_input` is the folder where cif files are stored (if a file does not exist already it will downloaded)
    - `path_to_output` is the folder where the results will be generated (for example, `` `pwd` `` to use current working directory)
    - `pdb_id` is the PDB identifier of the structure to be annotated (for example, `1S72`). Multiple PDB identifiers can be specified.

### Understanding the output

The program `NA_pairwise_interactions.py` generates tab-separated files called `<pdb_id>_basepairs.txt` that contain the following fields:

- Unit ID of the first nucleotide in the [Unit ID format](https://www.bgsu.edu/research/rna/help/rna-3d-hub-help/unit-ids.html)
- basepair interaction between the first and second nucleotides, defined according to the [Leontis-Westhof nomenclature](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1370104/)
- Unit ID of the second nucleotide
- number of interactions crossed by the basepair (0 for nested basepairs or an integer for non-nested basepairs)

For example:

```
1S72|1|0|A|1193	tSH	1S72|1|0|U|1205	0
1S72|1|0|A|631	tSH	1S72|1|0|U|2607	25
```

## Cloning FR3D Python
FR3D Python can be cloned to your local machine from our [Github](https://github.com/BGSU-RNA/fr3d-python).  Once the repository is cloned to your machine, to navigate to the fr3d-python folder and run ```python setup.py install```. <br>
NOTE: Any time functionality in files such as fr3d/cif/reader.py get edited, you will need to rerun the ```python setup.py install``` command.

## To Set up FR3D using Python 2.7
### Download and Install PDBx
**FR3D-python requires PDBx to be installed**
PDBx can be downloaded and installed from PDB [here](https://mmcif.wwpdb.org/docs/sw-examples/python/html/). Follow instructions to get PDBx installed on your local machine and placed in your python path. This completes the installation process for FR3D using python 2.7. 

## To Set up FR3D using Python 3.x
In order to use FR3D in Python 3, you will need to install the mmcif-pdbx package. 
You can do that by using ``` pip install mmcif-pdbx``` . This package can be found [here](https://pypi.org/project/mmcif-pdbx/).
This will put the pdbx package in your python path. If for some reason your machine expects the iterator loop to deal with bytes, at lines 387 and 397 (in C:\python-path\padbx\reader.py) you can add a line ``` line = line.decode() ``` after the for loop for the file iterator. 

## Running FR3D Python
In order to run FR3D python, navigate to the fr3d folder. 
The program to annotate basepairs is called NA_pairwise_interactions.py.
This can be found in fr3d/classifiers.

To run, if you have filled out localpath.py to represent your file structue, navigate to the classifiers folder in your file structure and run ```python NA_pairwise_interactions.py```. 

If you have not set up a localpath file, the --input (-i) and --output (-o) flags are required for the program to run. 

If you already have the .cif file downloaded, you can use the -i flad to specify the directory your cif file is in. This can be done in the form of

``` python NA_pairwise_interactions.py --input C:\Path\To\Your\File\ ``` . 

Additionally, if you don't have the cif file in your localpath, you can run 

``` python NA_pairwise_interactions.py [FILE].cif ``` 

and this will download the file for processing and run the program. 

Output can be specified using the -o or --output tags. This can be done in the form of 

``` python NA_pairwise_interactions.py --output C:\Where\You\Want|Annotations\Output\ ```

This will write where you wish to output your annotations. If the specified directory doesn't exist, one will be made. 

## Windows users
FR3D Python uses case-sensitive file names because chain identifiers in PDB are case sensitive.
Windows looks like it uses case sensitive filenames, but if you create a file called Data.txt and then save another file in the same place called data.txt, it will overwrite Data.txt and it will be listed as Data.txt because that was there first.
Recent versions of Windows allow for case sensitivity.
For FR3D Python, you need to enable case sensitivity in filenames in the ```units``` folder.
See https://docs.microsoft.com/en-us/windows/wsl/case-sensitivity to read about how to enable case sensitivity for a specific directory.
The key steps seem to be:
	- Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux
	- fsutil.exe file setCaseSensitiveInfo <path to folder> enable
Note that the first step is not actually mentioned in the Microsoft documentation.

